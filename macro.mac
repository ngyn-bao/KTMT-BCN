.macro writeFile (%descriptor, %string, %length)
	addi $v0, $zero, 15    # Syscall ghi file
	move $a0, %descriptor # Descriptor cua file
	la $a1, %string # Dia chi cua chuoi can ghi
	addi $a2, $zero, %length # Do dai chuoi
	syscall
.end_macro

.macro printNewLine (%descriptor)
	addi $v0, $zero, 15    # Syscall ghi file
	move $a0, %descriptor # Descriptor cua file
	la $a1, newline # Dia chi cua chuoi newline
	addi $a2, $zero, 1 # Do dai chuoi newline
	syscall
.end_macro
	
.macro convertToBinary (%num, %buffer)
	#Chuyen doi so nguyen num thanh chuoi nhi phan sau do luu vao buffer
	move $t1, %num
	addi $t2, $zero, 16 #Do dai chuoi nhi phan
	addi $a1, $a1, 15 # Dat con tro buffer vao cuoi chuoi
	sb $zero, 0($a1)
	sub $a1, $a1, 1
	
	binaryLoop:
		beqz $t2, binaryDone # Thoat neu du 16bit
		
		divu $t2, $t2, 2
		mfhi $t5
		addi $t5, $t5, '0'
		sb $t5, 0($a0)
		addi $a0, $a0, 1
		
		j binaryLoop #Lap lai
		
	binaryDone: 
		sb $zero, 1($t3)
	
		.end_macro

.macro convertToDecimal (%num, %buffer)
	move $t1, %num
	addi $t2, $zero, 5 #Do dai chuoi thap phan
	addi $a1, $a1, 4 # Dat con tro buffer vao cuoi chuoi
	sb $zero, 0($a1)
	sub $a1, $a1, 1

	decimalLoop:
		beqz $t1, decimalDone
		div $t3, $t1, 10 # Chia lay phan nguyen
		mfhi $t4 # Lay phan du (so cuoi)
		addi $t4, $t4, '0'	
		sb $t4, 0($a1)
		move $t1, $t3
		sub $a1, $a1, 1
    		sub $t2, $t2, 1
		j decimalLoop
		
	decimalDone:
		.end_macro

.macro convertToHex (%num, %buffer)
	move $t1, %num
	addi $t2, $zero, 4 #Do dai chuoi thap luc phan
	addi $a1, $a1, 3 # Dat con tro buffer vao cuoi chuoi
	sb $zero, 0($a1)
	sub $a1, $a1, 1
	
	hexLoop:
		beqz $t2, hexDone
		andi $t3, $t1, 15 # Lay 4 bit cuoi
		li $t4, 10
		blt $t3, $t4, hexDigit
		li $t4, 'A'        
    		subi $t4, $t4, 10  
    		add $t3, $t3, $t4 
		j hexStore
		
	hexDigit:
		addi $t3, $t3, '0'
		
	hexStore:
		sb $t3, 0($a1)
    		srl $t1, $t1, 4
    		sub $t2, $t2, 1
   		 sub $a1, $a1, 1
    		j hexLoop
    		
    	hexDone: 
    		.end_macro
		
